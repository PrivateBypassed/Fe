do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v75 = v2(v0(v30, 16));
				if v19 then
					local v87 = v5(v75, v19);
					v19 = nil;
					return v87;
				else
					return v75;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v76 = (v31 / (((922 + 490) - (954 + 343 + 113)) ^ (v32 - 1))) % ((463 - (206 + 255)) ^ (((v33 - (3 - 2)) - (v32 - 1)) + (1 - 0)));
				return v76 - (v76 % (365 - (220 + 144)));
			else
				local v77 = (2 + 0) ^ (v32 - 1);
				return (((v31 % (v77 + v77)) >= v77) and (1 + 0)) or ((0 - 0) + (0 - 0));
			end
		end
		local function v21()
			local v38 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v38;
		end
		local function v22()
			local v39, v40 = v1(v16, v18, v18 + 1 + 1);
			v18 = v18 + (49 - (35 + 12));
			return (v40 * (680 - 424)) + v39;
		end
		local function v23()
			local v41, v42, v43, v44 = v1(v16, v18, v18 + (4 - 1));
			v18 = v18 + (609 - (288 + (460 - 143)));
			return (v44 * ((16387031 - 4762528) + 5152713)) + (v43 * (67470 - (544 + 1390))) + (v42 * (197 + 59)) + v41;
		end
		local function v24()
			local v45 = v23();
			local v46 = v23();
			local v47 = 1 + 0;
			local v48 = (v20(v46, 1587 - ((1350 - 895) + 1131), 87 - 67) * ((3 - 1) ^ (99 - 67))) + v45;
			local v49 = v20(v46, 21, 6 + (56 - 31));
			local v50 = ((v20(v46, 750 - (601 + 117)) == (2 - 1)) and -(1 + 0)) or (135 - (57 + 77));
			if (v49 == (0 + 0 + 0)) then
				if (v48 == (1574 - (1478 + 96))) then
					return v50 * (0 + 0);
				else
					v49 = 1 + (0 - 0);
					v47 = 162 - (9 + 153);
				end
			elseif (v49 == (31 + 2016)) then
				return ((v48 == (0 - 0)) and (v50 * ((981 - (506 + 474)) / (0 - 0)))) or (v50 * NaN);
			end
			return v8(v50, v49 - (1902 - 879)) * (v47 + (v48 / ((1 + 1) ^ (1863 - ((520 - (62 + 25)) + (3270 - (630 + 1262)))))));
		end
		local function v25(v34)
			local v51;
			if not v34 then
				v34 = v23();
				if (v34 == (0 + 0)) then
					return "";
				end
			end
			v51 = v3(v16, v18, (v18 + v34) - (1 - 0));
			v18 = v18 + v34;
			local v52 = {};
			for v63 = 855 - (700 + 154), #v51 do
				v52[v63] = v2(v1(v3(v51, v63, v63)));
			end
			return v6(v52);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v53 = {};
			local v54 = {};
			local v55 = {};
			local v56 = {v53,v54,nil,v55};
			local v57 = v23();
			local v58 = {};
			for v65 = 1, v57 do
				local v66 = v21();
				local v67;
				if (v66 == 1) then
					v67 = v21() ~= 0;
				elseif (v66 == (1232 - (997 + 233))) then
					v67 = v24();
				elseif (v66 ~= 3) then
				else
					v67 = v25();
				end
				v58[v65] = v67;
			end
			v56[1684 - (1561 + 120)] = v21();
			for v69 = 782 - (562 + 219), v23() do
				local v70 = v21();
				if (v20(v70, 1, 711 - (614 + 96)) == (0 + 0)) then
					local v83 = v20(v70, 2, 267 - (251 + 13));
					local v84 = v20(v70, 4, 2 + 4);
					local v85 = {v22(),v22(),nil,nil};
					if (v83 == (0 - 0)) then
						v85[9 - 6] = v22();
						v85[4] = v22();
					elseif (v83 == (3 - 2)) then
						v85[3 - 0] = v23();
					elseif (v83 == 2) then
						v85[10 - 7] = v23() - (2 ^ 16);
					elseif (v83 == (2 + 1)) then
						v85[3 + 0] = v23() - (2 ^ 16);
						v85[11 - 7] = v22();
					end
					if (v20(v84, 1, 1) ~= 1) then
					else
						v85[2] = v58[v85[111 - (97 + 12)]];
					end
					if (v20(v84, 4 - 2, 884 - (773 + 109)) ~= 1) then
					else
						v85[3] = v58[v85[3]];
					end
					if (v20(v84, 11 - 8, 5 - 2) ~= 1) then
					else
						v85[4] = v58[v85[4 + 0]];
					end
					v53[v69] = v85;
				end
			end
			for v71 = 181 - (7 + 173), v23() do
				v54[v71 - 1] = v28();
			end
			for v73 = 2 - 1, v23() do
				v55[v73] = v23();
			end
			return v56;
		end
		local function v29(v35, v36, v37)
			local v60 = v35[1];
			local v61 = v35[2];
			local v62 = v35[3];
			return function(...)
				local v78 = 1;
				local v79 = -1;
				local v80 = {...};
				local v81 = v12("#", ...) - 1;
				local function v82()
					local v88 = v60;
					local v89 = v61;
					local v90 = v62;
					local v91 = v27;
					local v92 = {};
					local v93 = {};
					local v94 = {};
					for v107 = 0, v81 do
						if ((883 >= (376 + 203)) and (v107 >= v90)) then
							v92[v107 - v90] = v80[v107 + (1 - 0)];
						else
							v94[v107] = v80[v107 + 1 + 0];
						end
					end
					local v95 = (v81 - v90) + (1056 - (442 + 613));
					local v96;
					local v97;
					while true do
						v96 = v88[v78];
						v97 = v96[1308 - (718 + (904 - (309 + 6)))];
						if ((((4880 - (415 + 422)) - (230 + 136)) >= (8326 - 4886)) and (v97 <= 6)) then
							if ((v97 <= ((1141 - (144 + 995)) + 0)) or (954 >= 4650)) then
								if (((641 + (1107 - (527 + 450))) <= (3545 + 261)) and (v97 <= (484 - (437 + 16 + 31)))) then
									do
										return;
									end
								elseif (((8243 - 5033) == 3210) and (v97 == (112 - (57 + 54)))) then
									local v119 = v96[2 + 0];
									v94[v119] = v94[v119](v13(v94, v119 + 1, v96[3 + 0]));
								else
									v94[v96[4 - 2]] = v96[3];
								end
							elseif (((2199 - (222 + 558)) <= (3836 + 422)) and (v97 <= 4)) then
								if (((3121 + 1166) >= (72 + (988 - (217 + 650)))) and (v97 > (2 + 1))) then
									local v123 = v96[2 + 0];
									local v124, v125 = v91(v94[v123](v13(v94, v123 + (1225 - (1164 + 60)), v96[1744 - (137 + 1604)])));
									v79 = (v125 + v123) - ((2 - 1) + 0 + 0);
									local v126 = 0 + 0;
									for v145 = v123, v79 do
										v126 = v126 + (1 - 0);
										v94[v145] = v124[v126];
									end
								else
									local v127 = v96[7 - 5];
									v94[v127] = v94[v127](v13(v94, v127 + (1446 - (649 + 98 + 698)), v79));
								end
							elseif ((2068 == (3895 - ((1459 - (136 + 169)) + 673))) and (v97 == (10 - 5))) then
								local v129 = v96[2 + 0];
								v94[v129] = v94[v129]();
							else
								v94[v96[3 - 1]][v96[3 + 0]] = v96[577 - (245 + 328)];
							end
						elseif (((11322 - 7145) > (14723 - 10684)) and (v97 <= ((608 - (65 + 518)) - 16))) then
							if (((4879 - 2765) < (2091 + 398)) and (v97 <= (7 + 0))) then
								local v118 = v96[1637 - (126 + 1509)];
								v94[v118](v94[v118 + ((1701 - 289) - (674 + 737))]);
							elseif ((4239 > (905 - 550)) and (v97 == (30 - 22))) then
								v94[v96[2]] = v37[v96[3 + 0]];
							else
								v94[v96[2 + 0]] = {};
							end
						elseif ((v97 <= 11) or (((1838 - (214 + 506)) - (45 + 104)) < (1544 - 1169))) then
							if ((v97 == (999 - (860 + 129))) or ((8067 - 4404) < (51 + 1239))) then
								v37[v96[9 - 6]] = v94[v96[3 - 1]];
							else
								local v138 = v96[3 - 1];
								local v139 = v94[v96[223 - (23 + 197)]];
								v94[v138 + 1] = v139;
								v94[v138] = v139[v96[4]];
							end
						elseif (((2918 - (267 + 295)) >= 1748) and (v97 > (60 - (25 + 23)))) then
							local v143 = v96[376 - (313 + 61)];
							v94[v143](v13(v94, v143 + (2 - 1), v96[9 - 6]));
						else
							v94[v96[1959 - (221 + 1736)]] = v96[172 - (96 + 73)] ~= (0 - 0);
						end
						v78 = v78 + 1;
					end
				end
				A, B = v27(v11(v82));
				if not A[1] then
					local v98 = v35[4][v78] or "?";
					error("Script error at [" .. v98 .. "]:" .. A[2]);
				else
					return v13(A, 2, B);
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
